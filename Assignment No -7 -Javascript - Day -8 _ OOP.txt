Guvi Geeks Network Pvt Ltd.
1. https://github.com/rvsp/typescript-oops/blob/master/Practice/Movie.md
Ans:-

Class - Movie
The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:

title, which is a String representing the title of the movie
studio, which is a String representing the studio that made the movie
rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)


a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, 
and a String representing the rating as its arguments, and sets the respective class properties to these values.
Ans:- Code :-

class Movie{
    constructor(movie_name, studio_name ,Rating)
    {
        this.movie_name = movie_name;
        this.studio_name = studio_name;
        this.rating = rating;
    }

}

let Movie1 = new Movie("Radhe","Dhrama production","PG")


b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.
Ans :-
class Movie{
    constructor(movie_name, studio_name ,Rating="PG")
    {
        this.movie_name = movie_name;
        this.studio_name = studio_name;
        this.Rating = Rating;
    }
getdata()
{
console.log(`${this.movie_name} ${this.studio_name} ${this.Rating}`)
}

}

let Movie1 = new Movie("Radhe","Dhrama production")
Movie1.getdata();

Output : -Radhe Dhrama production PG
c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the input array with a rating of "PG". 
You may assume the input array is full of Movie instances. The returned array need not be full.
Ans :
code :- 

// Method for movie which haivng "PG" rating.
GetPGMovie(...movie_array){
let PGMovie= []; 
for (let i=0; i<movie_array.length; i++)
{
    if(movie_array[i].Rating==="PG")
    {
        PGMovie.push(movie_array[i]);
    }
}
return PGMovie;// return of array
}}

d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG­13”
ANS :-
class Movie{
    constructor(movie_name, studio_name ,Rating)
    {
        this.movie_name = movie_name;
        this.studio_name = studio_name;
        this.Rating = Rating;
    }
getdata()
{
console.log(`${this.movie_name} ${this.studio_name} ${this.Rating}`)
}

}

let Movie1 = new Movie("Casino Royalee","Eon Productions","PG13")
Movie1.getdata();


output:-Casino Royalee Eon Productions PG13

2. https://github.com/rvsp/typescript-oops/blob/master/Practice/class-circle.md
Ans :-

//UML diagram to Typescript class

class Circle{
constructor(radius=1.0 , color ="red")
{
    this.radius = radius;
    this.color = color;
}
getRadius() { 
    return this.radius; 
}

setRadius(radius)
{
    this.radius = radius;
}

getColor() {
    return this.color;
}

setColor(color)
{
    this.color = color;
}

getArea()
{
    const pie =3.1415
    let area;
    area = pie*this.radius*this.radius;
    return area;
}

getCircumference()
{
    const pie =3.1415
    let peri;
    peri = 2*pie*this.radius;
    return peri;
}
}

let Circle1 = new Circle(5,"Orange");
Circle1.setRadius(10);
console.log(Circle1.getRadius());



class Uber{
    constructor(distance, Price, add_charge) 
    {
        this.distance = distance;
        this.price = Price
        this.add_charge = add_charge
    }

    getPrice() { 
        let price = this.price * this.distance + this.add_charge;
        return price;
     }
}

let uber1 = new Uber(3, 50, 20);
console.log(uber1.getPrice());



3. Write a “person” class to hold all the details.
Ans:-

class person
{
    static companyName = "Amazon";

    constructor(name, age, address)
{
    this.name = name;
    this.age = age;
    this.address = address;
    }

    getdata()
    {
        let persondata =`Name :${this.name} Age : ${this.age} Address: ${this.address}`
        console.log(persondata);
    }

    static CompanyName()
    {
        console.log(person.companyName);
    }

}
class employee extends person
{
    static companyName ="Google";

    constructor(name , age, address, postion ,salary)
    {
        super(name , age, address);
        this.postion = postion;
        this.salary = salary;
    }

    getdata()
    {
        let employeedata =`Name :${this.name} Age : ${this.age} Address: ${this.address} Postion:${this.postion} salary:${this.salary}`;
        console.log(employeedata);
    }

    static CompanyName()
        {
            console.log(employee.companyName);
        }


}


let employee1 = new employee("Sanket", 45 ,"Pune","SDE",150000);
employee1.getdata();
employee.CompanyName();
let person1 = new person("Sanket", 45 ,"Pune");
person1.getdata();
person.CompanyName();


4. write a class to calculate uber price.
Ans :-

class Uber{
    constructor(distance, Price, add_charge) 
    {
        this.distance = distance;
        this.price = Price
        this.add_charge = add_charge
    }

    getPrice() { 
        let price = this.price * this.distance + this.add_charge;
        return price;
     }
}

let uber1 = new Uber(3, 50, 20);
console.log(uber1.getPrice());

output :- 170